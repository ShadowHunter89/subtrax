name: Upload Firebase Secret

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.GCP_SA_KEY }}" ]; then echo "Missing GCP_SA_KEY secret"; exit 1; fi
          if [ -z "${{ secrets.FIREBASE_ACCOUNT_JSON }}" ]; then echo "Missing FIREBASE_ACCOUNT_JSON secret"; exit 1; fi
      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '427.0.0'
      - name: Authenticate with service account key
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > /tmp/sa.json
          gcloud auth activate-service-account --key-file=/tmp/sa.json
      - name: Configure project
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          if [ -z "$FIREBASE_PROJECT_ID" ]; then echo "Missing FIREBASE_PROJECT_ID secret"; exit 1; fi
          gcloud config set project "$FIREBASE_PROJECT_ID"
      - name: Create or update secret
        env:
          SECRET_NAME: ${{ env.SECRET_NAME || 'firebase-service-account' }}
          FIREBASE_ACCOUNT_JSON: ${{ secrets.FIREBASE_ACCOUNT_JSON }}
        run: |
          # create secret if it doesn't exist, ignoring errors if it already exists
          if ! gcloud secrets describe "$SECRET_NAME" >/dev/null 2>&1; then
            gcloud secrets create "$SECRET_NAME" --replication-policy="automatic"
          fi
          # add a new secret version with the provided JSON
          echo "$FIREBASE_ACCOUNT_JSON" | gcloud secrets versions add "$SECRET_NAME" --data-file=-
      - name: Cleanup
        run: |
          rm -f /tmp/sa.json
