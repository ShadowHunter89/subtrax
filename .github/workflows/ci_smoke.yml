name: CI Smoke

on:
  push:
    branches: [ main, feat/frontend-host-agnostic ]
  pull_request:
    branches: [ main ]

jobs:
  server-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install server deps
        working-directory: ./server
        run: npm ci
      - name: Run server tests
        working-directory: ./server
        run: npm test --silent
  smoke-health:
    runs-on: ubuntu-latest
    needs: server-tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install server deps
        working-directory: ./server
        run: npm ci
      - name: Start server in background
        working-directory: ./server
        run: |
          nohup node server.js > server.log 2>&1 &
          sleep 2
      - name: Health check
        working-directory: ./server
        run: |
          curl --fail http://127.0.0.1:5000/api/health

  smoke-firebase-init:
    runs-on: ubuntu-latest
    needs: server-tests
    # only run if we have at least one of the firebase secrets configured in repo secrets
    if: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 || (secrets.FIREBASE_SECRET_NAME && secrets.FIREBASE_PROJECT_ID) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install server deps
        working-directory: ./server
        run: npm ci
      - name: Prepare env from secrets
        working-directory: ./server
        run: |
          echo "Preparing env..."
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_BASE64" ] && [ -z "$FIREBASE_SECRET_NAME" ] && [ -z "$FIREBASE_PROJECT_ID" ]; then
            echo "WARNING: No Firebase secrets set. Skipping Firebase init."
          fi
        env:
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}
          FIREBASE_SECRET_NAME: ${{ secrets.FIREBASE_SECRET_NAME }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      - name: Authenticate to Google Cloud
        if: ${{ secrets.GCP_SA_KEY && secrets.FIREBASE_PROJECT_ID }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
          
      - name: Fetch secret from GCP Secret Manager
        working-directory: ./server
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_SECRET_NAME: ${{ secrets.FIREBASE_SECRET_NAME }}
        run: |
          echo "Fetching Firebase secret from GCP Secret Manager..."
          SECRET_NAME="${FIREBASE_SECRET_NAME:-firebase-service-account}"
          
          if gcloud secrets describe "$SECRET_NAME" --project="$FIREBASE_PROJECT_ID" >/dev/null 2>&1; then
            echo "Fetching secret: $SECRET_NAME"
            gcloud secrets versions access latest --secret="$SECRET_NAME" --project="$FIREBASE_PROJECT_ID" > /tmp/firebase.json
            export FIREBASE_SERVICE_ACCOUNT_JSON=$(cat /tmp/firebase.json)
            echo "✅ Successfully fetched Firebase secret"
            # Clean up
            rm -f /tmp/firebase.json
          else
            echo "⚠️  Secret $SECRET_NAME not found in project $FIREBASE_PROJECT_ID"
            echo "Available secrets:"
            gcloud secrets list --project="$FIREBASE_PROJECT_ID" --limit=10 || true
          fi
      - name: Run firebase init smoke check
        working-directory: ./server
        run: node ./scripts/checkFirebaseInit.js

  integration-tests-with-redis:
    runs-on: ubuntu-latest
    needs: server-tests
    services:
      redis:
        image: redis:7.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install server deps
        working-directory: ./server
        run: npm ci
      - name: Run integration tests with Redis available
        working-directory: ./server
        env:
          REDIS_URL: redis://127.0.0.1:6379
        run: |
          echo "Waiting for redis service..."
          sleep 5
          npm test --silent
