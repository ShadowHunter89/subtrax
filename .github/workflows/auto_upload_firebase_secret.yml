name: Upload Firebase service account to Secret Manager

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'GCP project id'
        required: true
        default: 'subtrax-4964f'
      secret_name:
        description: 'Secret name to create in Secret Manager'
        required: true
        default: 'subtrax-firebase-key'

jobs:
  upload:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ github.event.inputs.project }}

      - name: Create secret and add version
        env:
          PROJECT: ${{ github.event.inputs.project }}
          SECRET_NAME: ${{ github.event.inputs.secret_name }}
          SA_JSON: ${{ secrets.FIREBASE_ACCOUNT_JSON }}
        run: |
          set -e
          echo "Checking for existing secret $SECRET_NAME in project $PROJECT..."
          if gcloud secrets describe "$SECRET_NAME" --project="$PROJECT" >/dev/null 2>&1; then
            echo "Secret exists. Adding a new version..."
          else
            echo "Secret does not exist. Creating..."
            gcloud secrets create "$SECRET_NAME" --replication-policy="automatic" --project="$PROJECT"
          fi
          echo "$SA_JSON" > /tmp/firebase-sa.json
          gcloud secrets versions add "$SECRET_NAME" --data-file=/tmp/firebase-sa.json --project="$PROJECT"
          echo "Secret stored: projects/$PROJECT/secrets/$SECRET_NAME"

      - name: Output
        run: echo "Done. Set FIREBASE_SECRET_NAME=$SECRET_NAME and FIREBASE_PROJECT_ID=$PROJECT in your runtime."
