name: Manual Upload & Validate

on:
  workflow_dispatch:

jobs:
  validate-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install server deps
        working-directory: ./server
        run: npm ci
      - name: Validate envs
        working-directory: ./server
        # Expose the repository secrets into the step environment so the validator
        # can detect the Firebase credentials the repo already has (e.g. FIREBASE_ACCOUNT_JSON)
        env:
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_ACCOUNT_JSON }}
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}
          FIREBASE_SECRET_NAME: ${{ secrets.FIREBASE_SECRET_NAME }}
        run: node ./scripts/validate_envs.js
      - name: Upload firebase secret (if available)
        if: ${{ secrets.GCP_SA_KEY && secrets.FIREBASE_ACCOUNT_JSON && secrets.FIREBASE_PROJECT_ID }}
        # Ensure gcloud is installed and authenticated using the provided service account key
        run: |
          echo "Preparing to upload firebase secret via gcloud..."
          echo "${{ secrets.FIREBASE_ACCOUNT_JSON }}" > /tmp/firebase.json
          SECRET_NAME=${{ secrets.FIREBASE_SECRET_NAME || 'firebase-service-account' }}
          if ! gcloud secrets describe "$SECRET_NAME" >/dev/null 2>&1; then
            gcloud secrets create "$SECRET_NAME" --replication-policy="automatic"
          fi
          gcloud secrets versions add "$SECRET_NAME" --data-file=/tmp/firebase.json
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Setup gcloud (authenticate)
        if: ${{ secrets.GCP_SA_KEY && secrets.FIREBASE_PROJECT_ID }}
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}
